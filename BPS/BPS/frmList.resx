<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnEarlyBird.Values.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADr2lUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNS4zLWMwMTEgNjYuMTQ1NjYxLCAyMDEyLzAyLzA2LTE0OjU2OjI3ICAgICAgICAiPiA8cmRmOlJE
        RiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
        cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXBSaWdodHM9Imh0dHA6Ly9ucy5hZG9i
        ZS5jb20veGFwLzEuMC9yaWdodHMvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAv
        MS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNv
        dXJjZVJlZiMiIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIgeG1wUmlnaHRz
        Ok1hcmtlZD0iRmFsc2UiIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0idXVpZDo3OTcyQTUxM0Y3M0ZF
        NTExQkQxRUFBQjQzQUYxMzk4QiIgeG1wTU06RG9jdW1lbnRJRD0ieG1wLmRpZDo1OEU0M0ZBQ0ZBNjMx
        MUU2ODVCM0Q0OUZFNTQ3MDdCNSIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDo1OEU0M0ZBQkZBNjMx
        MUU2ODVCM0Q0OUZFNTQ3MDdCNSIgeG1wOkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ1M2IChX
        aW5kb3dzKSI+IDx4bXBNTTpEZXJpdmVkRnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAuaWlkOjc3OTUz
        QjFFNjBGQUU2MTFCOEY2RDBBRTM5RjM3NTJEIiBzdFJlZjpkb2N1bWVudElEPSJ1dWlkOjc5NzJBNTEz
        RjczRkU1MTFCRDFFQUFCNDNBRjEzOThCIi8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwv
        eDp4bXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+kPv2SwAACR1JREFUWEfFV3tQk1cWv/UBvhWk8hAD
        SciXj4Q3SEIUeSYBAiHIQ9nVHXWmynZnW9vttGN1tztq3e7o6OraTmc7bXftdGrHR8fdadVVN8QACQKW
        FhAFd0sFBRGDAnUtKGfPuZAElbp/mplDLvfec87vnvM7594wAGDPUrhztutt5rNlK0s2Wpg2M4dpsvPn
        aXIsK5KNhTnJBnNsUmYuCy4oZZtXZLJ/ipEsNtfCQsxluTG5RXdiURabSwti8izsNK69mprBQgrKWCLq
        JBvNMaifg3ZWJOaY56dk5bEUYyHz3fIm98l98z8H9jO2YycBmKbLytunMRa6UIAEFSDBUHjTp3hNSUVa
        FoPAAGZXKplBbyqLzymChBwL6PWmn9tEkcGiAPar1Ezmu3KtJd5o7iFdtx387tdl5+/XGsw+bPt2xvbv
        8wJYULGJBazbMBtP3ZJiMHuUdDhW5RVDiHl150vLMqKdSmVKvaDY2S6XnW0QhGsn1VEPSRqUQifOnatT
        KN6uFQTdZl26erF5dUck6pINz2H0ODYUXg7dWDE3+KWXvQBSk9NYaqq+UmO0POJcbiqBCFNJzZ8Tkld1
        S8M+bhYUYFMqoTIwCBwzZ0DDtKlcaFwZGAg2QQlNggDd4WGH3k1YWoa61TJT6SMgCExaeo49Ld3oBZCs
        L0zVTggXoQ7PLwXMr+tEVEzlTbnsR6dUCuemTQPb3LlQq9FAY3k5NL/4Ihca12q1UDlvHt/jlIZDT4Rs
        5B9R0dY4tBGGtiZGgkAsNZgyPBzQ5Fred4eJNobllwHl16pSD99QyME6ezY33rRxI3SdOgW3e3vhDmq7
        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
</value>
  </data>
  <data name="btnDCDELog.Values.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        fiZ+nP4Dzxwj9W2oY6YAAAAASUVORK5CYII=
</value>
  </data>
</root>